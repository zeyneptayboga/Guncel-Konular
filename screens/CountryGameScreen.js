import React, { useContext } from 'react';
import { View, Text, StyleSheet, TouchableOpacity, Alert } from 'react-native';
import { AvatarContext } from '../context/AvatarContext';

const countryTasks = {
  T√ºrkiye: { flag: 'T√ºrk bayraƒüƒ± hangi fig√ºrleri i√ßerir?', food: 'Hangisi T√ºrk mutfaƒüƒ±na aittir?', language: 'T√ºrk√ße "Merhaba" nedir?' },
  Fransa: { flag: 'Fransa bayraƒüƒ± √º√ß renkten olu≈üur. Renkler nelerdir?', food: 'Hangisi Fransƒ±z yemeƒüidir?', language: 'Fransƒ±zca "Merhaba" nedir?' },
  Japonya: { flag: 'Japon bayraƒüƒ±nda hangi fig√ºr vardƒ±r?', food: 'Hangisi Japon yemeƒüidir?', language: 'Japonca "Te≈üekk√ºr ederim" nedir?' },
  ƒ∞talya: { flag: 'ƒ∞talya bayraƒüƒ±nda hangi renk yoktur?', food: 'Hangisi ƒ∞talyan yemeƒüidir?', language: 'ƒ∞talyanca "G√ºnaydƒ±n" nedir?' },
  Brezilya: { flag: 'Brezilya bayraƒüƒ±ndaki yazƒ± nedir?', food: 'Hangisi Brezilya‚Äôya ait bir yemektir?', language: 'Portekizce "Merhaba" nedir?' },
};

const CountryGameScreen = ({ route, navigation }) => {
  const { country } = route.params;
  const tasks = countryTasks[country];
  const { completedCategories, resetAvatar } = useContext(AvatarContext);

  const isTaskDone = (cat) => completedCategories[`${country}_${cat}`];
  const allDone = ['flag', 'food', 'language'].every(isTaskDone);

  const handleStart = (category) => {
    navigation.navigate('CategoryQuiz', {
      country,
      category,
    });
  };

  const handleComplete = () => {
    if (!allDone) {
      Alert.alert("G√∂revler Eksik", "L√ºtfen t√ºm g√∂revleri tamamla (Bayrak, Yemek, Dil).");
      return;
    }

    const allCountries = Object.keys(countryTasks);
    const allTasksDone = allCountries.every(c =>
      ['flag', 'food', 'language'].every(k => completedCategories[`${c}_${k}`])
    );

    if (allTasksDone) {
      Alert.alert("üéâ T√ºm Maceralar Tamamlandƒ±!", "Harikaydƒ±n! ≈ûimdi ba≈üa d√∂n√ºyoruz!", [
        {
          text: "Ba≈ütan Ba≈üla",
          onPress: () => {
            resetAvatar();
            navigation.navigate('Splash');
          }
        }
      ]);
    } else {
      Alert.alert("Tebrikler!", `${country} g√∂revini tamamladƒ±n.`, [
        {
          text: "Haritaya D√∂n",
          onPress: () => navigation.navigate('Summary', { country }),
        }
      ]);
    }
  };

  return (
    <View style={styles.container}>
      <Text style={styles.title}>{country} G√∂revleri</Text>

      {['flag', 'food', 'language'].map((category) => (
        <TouchableOpacity
          key={category}
          style={styles.taskBlock}
          onPress={() => handleStart(category)}
        >
          <Text style={styles.taskTitle}>
            {category === 'flag' && 'üü¶ Bayrak Bilgisi'}
            {category === 'food' && 'üçΩÔ∏è Y√∂resel Yemek'}
            {category === 'language' && 'üó£Ô∏è Dil Kartƒ±'}
          </Text>
          <Text style={styles.taskText}>{tasks?.[category]}</Text>
          {isTaskDone(category) && (
            <Text style={styles.completedTag}>‚úî Tamamlandƒ±</Text>
          )}
        </TouchableOpacity>
      ))}

      <TouchableOpacity style={styles.completeButton} onPress={handleComplete}>
        <Text style={styles.completeButtonText}>G√∂revi Tamamla</Text>
      </TouchableOpacity>
    </View>
  );
};

const styles = StyleSheet.create({
  container: { flex: 1, padding: 20, backgroundColor: '#f9f9f9' },
  title: { fontSize: 26, fontWeight: 'bold', marginBottom: 25, textAlign: 'center', color: '#2c3e50' },
  taskBlock: {
    marginBottom: 18,
    padding: 16,
    backgroundColor: '#ecf0f1',
    borderRadius: 12,
    shadowColor: '#000',
    shadowOpacity: 0.08,
    shadowOffset: { width: 0, height: 2 },
    shadowRadius: 6,
    elevation: 3
  },
  taskTitle: { fontSize: 18, fontWeight: '600', marginBottom: 6, color: '#2980b9' },
  taskText: { fontSize: 16, color: '#34495e' },
  completedTag: { marginTop: 6, fontSize: 14, color: 'green', fontWeight: 'bold' },
  completeButton: {
    marginTop: 40,
    backgroundColor: '#2ecc71',
    padding: 16,
    borderRadius: 12,
    alignItems: 'center',
    elevation: 2
  },
  completeButtonText: {
    color: '#fff',
    fontSize: 18,
    fontWeight: 'bold'
  }
});

export default CountryGameScreen;
